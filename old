# Use the official Amazon Linux 2 as the base image
FROM amazonlinux:2

# Install Git to clone the repository
RUN yum update -y && \
    yum install -y git && \
    yum clean all

# Clone the repository into a temporary directory
RUN git clone https://github.com/benjamindavisdc/may23pipeline01 /tmp/repository

# Install Apache web server and other required packages
RUN yum install -y httpd && \
    yum clean all

# Install Python and pip
RUN yum install -y python3 python3-pip && \
    yum clean all

# Install Boto3
RUN pip3 install boto3

# Install WSGI
RUN yum install -y libapache2-mod-wsgi-py3

# Copy the contents from the cloned repository to the appropriate location
RUN cp -R /tmp/repository/* /var/www/html/

# Copy over and install the requirements
COPY ./app/requirements.txt /var/www/apache-flask/app/requirements.txt
RUN pip install -r /var/www/apache-flask/app/requirements.txt

# Copy over the apache configuration file and enable the site
COPY ./apache-flask.conf /etc/apache2/sites-available/apache-flask.conf

# Copy over the wsgi file, run.py and the app
COPY ./ /var/www/apache-flask/

RUN a2dissite 000-default.conf
RUN a2ensite apache-flask.conf
RUN a2enmod headers

# LINK apache config to docker logs.
RUN ln -sf /proc/self/fd/1 /var/log/apache2/access.log && \
    ln -sf /proc/self/fd/1 /var/log/apache2/error.log

# Expose port 80 for incoming HTTP traffic
EXPOSE 80

WORKDIR /var/www/apache-flask

# Start the Apache web server when the container launches
CMD ["/usr/sbin/httpd", "-D", "FOREGROUND"]
